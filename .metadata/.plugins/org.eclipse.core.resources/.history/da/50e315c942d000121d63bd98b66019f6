package pl.edu.pw.tele.frontend;

import java.awt.Label;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.Vector;
import java.util.logging.Logger;

import javax.print.attribute.standard.MediaSize.Engineering;
import javax.swing.DefaultListModel;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JPanel;
import javax.swing.ListModel;
import javax.swing.plaf.SliderUI;

import pl.edu.pw.tele.enigma.Enigma;
import pl.edu.pw.tele.enigma.Reflector;

public class MKOICenter extends JPanel implements Runnable
{
	
	static Logger log = Logger.getLogger(MKOICenter.class.getName());
	 static JList reflectorAl;
	 static JList reflector;
	protected static JList rotor1;
	protected static JList rotor1Al;
	protected static JList rotor2;
	protected static JList rotor2Al;
	protected static JList rotor3;

	static JList rotor3Al;
	
	DefaultListModel listmodel;
	
	static Vector<String> vec = new Vector<String>();
	
	static String[] dupa = new String[]{"empty", "empty", "empty", "empty"};

	
	public MKOICenter()
	{
		listmodel = new DefaultListModel();
		listmodel.addElement("ABCD");
		reflector = new JList(listmodel);
		reflectorAl = new JList(vec);
		add(reflectorAl);
		add(reflector);
		dupa = new String[]{"asd"};
		add(new JLabel("    "));
		
		rotor1 = new JList(dupa);
		
		rotor1Al = new JList(dupa);
		add(rotor1Al);
		add(rotor1);

		add(new JLabel("    "));
		
		rotor2 = new JList(dupa);
		rotor2Al = new JList(dupa);
		add(rotor2Al);
		add(rotor2);
		
		add(new JLabel("    "));
		
		rotor3 = new JList(dupa);
		rotor3Al = new JList(dupa);
		add(rotor3Al);
		add(rotor3);
		
		Thread t = new Thread(this);
		try {
			t.sleep(1000);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		t.start();
	}




	@Override
	public void run() {

	}

	
			
}
