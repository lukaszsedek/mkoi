package pl.edu.pw.tele.enigma;

import java.util.ArrayList;
import java.util.logging.Logger;


/**
 * Klasa reprezentuj¹ca wszystkie elementy Enigmy.<br>
 * Reprezentuje maszynê enigma<br>
 * Wzorzec singleton
 * @author Lukasz
 *
 */
public final class Enigma implements EnigmaInterface{

	/**
	 * <b>LOG4J</b>
	 */
	Logger log = Logger.getLogger(Enigma.class.getName());
	
	/**
	 * Signleton instance
	 */
	private static volatile Enigma instance = null;
	
	protected Reflector reflector = null;
	protected ArrayList<Rotor> rotors = null;
	protected int size = 0;
	
	/**
	 * <b>Metoda wzorca typu singleton. Chcemy mieæ tylko i wy³¹cznie jeden obiekt Enigmy.
	 * <br></b>
	 * @return <br>instancja Enigmy</b>
	 */
	 public static Enigma getInstance() {
	        if (instance == null) {
	            synchronized (Enigma.class) {
	                if (instance == null) {
	                    instance = new Enigma();
	                }
	            }
	        }
	        return instance;
	    }
	 
	 /**
	  * Zabezpieczenie na tworzenie nowych instacji Enigmy
	  */
	private Enigma()
	{
		
	}

	@Override
	public void createReflector(String s, int i) {
		log.info("tworzenie reflectora");
		size = i;
		reflector = new Reflector(s, size);
		
	}
}
