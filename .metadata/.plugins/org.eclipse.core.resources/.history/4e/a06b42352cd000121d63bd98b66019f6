package pl.edu.pw.tele.enigma;

import java.util.logging.Logger;

/**
 * 
 * @author Lukasz
 * Klasa, która odpowiada za przedstawienie reflektora
 */
public class Reflector implements ReflectorInterface {

	Logger log = Logger.getLogger(Reflector.class.getName());

	/**
	 * Reflector jako tablica intów.
	 */
	protected char[] reflector;
	protected char[] alfabet;
	
	
	
	/**
	 * Przechowywana wartoœæ d³ugoœci s³ownia.<br>
	 * Jest to nic innego jak d³ugoœæ tablicy reflektora
	 */
	protected int size = 0;
	
	/**
	 * Twór by konstruktor Reflektor(String,int) siê nie wywali³
	 */
	public Reflector()
	{
		//Musi byæ pusty. Nic nie implementujemy.
	}
	
	/**
	 * Konstruktor do wczytywania parametrów z pliku tekstowego
	 */
	public Reflector(String s)
	{
		parse(s);
	}
	
	/**
	 * Parser. S³u¿y do wczytywania wartoœæi przez parametry aktualne
	 */
	@Override
	public void parse(String s) {
		alfabet = Enigma.getInstance().getAlphabet();
		log.info("Reflector.alfabet = " + alfabet.toString());
	}

	@Override
	public int returnReflector(int i) throws Exception {
		if (i >1 && i < size)
			return reflector[i];
		else{
			throw new Exception("Incorrect pointer at reflector table");
		}
		
	}

}
