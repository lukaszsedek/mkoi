package pl.edu.pw.tele.enigma;

import java.util.ArrayList;
import java.util.logging.Logger;

import pl.edu.pw.tele.frontend.MKOICenter;

/**
 * 
 * @author Lukasz
 *
 */
public class Rotor implements RotorInterface{

	Logger log = Logger.getLogger(Rotor.class.getName());
	char[] alphabet;
	int position = 0;
	
	/**
	 * reprezentacja alfabetu
	 */
	ArrayList<String> alphabetList;
	
	/**
	 * reprezentacja rotora
	 */
	ArrayList<String> rotor;
	
	public Rotor(){}
	
	public Rotor(String s, String poz){
		log.info("Tworzenie rotora..." + s + " pozycja " + poz);
		char[] rotortable = s.toCharArray();
		
		for(int i = i ; i < rotortable.length ; i++)
		{
			rotor.add(String.valueOf(rotortable[i]));
		}
		
		log.info("Rotor : " + rotor.toString());
		
		Enigma enigma = Enigma.getInstance();
		alphabet = enigma.getAlphabet();
		

		alphabetList = new ArrayList<String>();
		
		for(int i = 0 ; i < alphabet.length; i++)
		{
			alphabetList.add(String.valueOf(alphabet[i]));
		}
		
		log.info("AlphabetList = " + alphabetList.toString());
		
		this.position = alphabetList.indexOf(poz);
		log.info("znaleziono " + position + " = " + poz);
		
	}

	@Override
	public int getSize() {
		return rotor.size();
	}

	public int getPosition() {
		return position;
	}

	public void setPosition(int position) {
		this.position = position;
	}



	public ArrayList<String> getAlphabetList() {
		return alphabetList;
	}

	public void setAlphabetList(ArrayList<String> alphabetList) {
		this.alphabetList = alphabetList;
	}

	
	public void  move()
	{
		position++;
		
		char lastAl = alphabet[alphabet.length -1];
		
	}
}
